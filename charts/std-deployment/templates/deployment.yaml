
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{.Values.namespace}}
  labels:
    app: {{ .Values.name }}
    helmVersion: {{ .Chart.Version }}
    helmAppVersion: {{ .Chart.AppVersion }}
    helmName: {{ .Chart.Name }}
spec:
{{- if not .Values.deployment.scale.autoscaling }}
  replicas: {{ .Values.deployment.scale.replicaCount }}
{{- end }}
  template:
    metadata:
      name: {{ .Values.name }}
      labels:
        app: {{ .Values.name }}
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": {{.Values.deployment.pool.os}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{.Values.deployment.pool.name}}
                operator: In
                values:
                - {{.Values.deployment.pool.name}}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - {{ .Values.name }}
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriod }}
      containers:
      - name: {{ .Values.name }}
        image: "{{.Values.deployment.image.registryDomain}}/{{.Values.deployment.image.name}}:{{ .Values.deployment.image.tag }}"
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        ports:
        {{- range $port := .Values.deployment.ports }}
        - containerPort: {{ $port }}
        {{- end }}
        env:
          {{- toYaml .Values.deployment.env | nindent 8 }}
        resources:
          {{- toYaml .Values.deployment.resources | nindent 12 }}
      nodeSelector:
        agentpool: {{ .Values.deployment.pool.name }}
      imagePullSecrets:
      - name: {{.Values.deployment.image.pullSecret}}
  selector:
    matchLabels:
      app: {{ .Values.name }}
